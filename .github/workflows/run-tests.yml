name: Run tests

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches-ignore:
      - 'dependabot/npm_and_yarn/*'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    name: 'Test: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}'

    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest ]
        php: [ 8., 8.3 ]
        laravel: [  11.*, 12.* ]
        stability: [ prefer-lowest, prefer-stable ]
        include:
          # Laravel 11
          - laravel: 11.*
            php: 8.2
            testbench: ^9.0
          - laravel: 11.*
            php: 8.3
            testbench: ^9.0
          # Laravel 12
          - laravel: 12.*
            php: 8.3
            testbench: ^10.0

    steps:
      - name: 📄 Clone repository
        uses: actions/checkout@v4

      - name: ⚙️Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none

      - name: ⚙️Set up problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: ⬇️Install Composer dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-progress --no-ansi --no-interaction

      - name: 🕵️Run Pest
        run: composer run test

  analyse:
    runs-on: ubuntu-latest
    name: Analyse

    steps:
      - name: 📄 Clone repository
        uses: actions/checkout@v4

      - name: 🔎 Read PHP version
        id: php
        run: echo "version=$(cat .php-version)" >> $GITHUB_OUTPUT

      - name: ⚙️Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ steps.php.outputs.version }}
          coverage: none

      - name: ⬇️Install Composer dependencies
        run: composer validate --no-check-publish && composer install --prefer-dist --no-progress --no-ansi --no-interaction

      - name: 🕵️Run PHPStan
        run: composer run analyse

      - name: 🧑‍🔧Run PHP-CS-Fixer
        run: composer run format:check
